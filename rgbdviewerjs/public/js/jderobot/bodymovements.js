// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `bodymovements.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var jderobot = __M.require(module, 
    [
        "jderobot/common",
        "jderobot/body"
    ]).jderobot;
    
    var Slice = Ice.Slice;

    /**
     * simply Arm position
     **/
    jderobot.ArmPosition = Slice.defineStruct(
        function(shoulder, elbow)
        {
            this.shoulder = shoulder !== undefined ? shoulder : new jderobot.BodyMotor();
            this.elbow = elbow !== undefined ? elbow : new jderobot.BodyMotor();
        },
        false,
        function(__os)
        {
            jderobot.BodyMotor.write(__os, this.shoulder);
            jderobot.BodyMotor.write(__os, this.elbow);
        },
        function(__is)
        {
            this.shoulder = jderobot.BodyMotor.read(__is, this.shoulder);
            this.elbow = jderobot.BodyMotor.read(__is, this.elbow);
        },
        24, 
        true);

    /**
     * simply leg position
     **/
    jderobot.LegPosition = Slice.defineStruct(
        function(hip, knee, ankle)
        {
            this.hip = hip !== undefined ? hip : new jderobot.BodyMotor();
            this.knee = knee !== undefined ? knee : new jderobot.BodyMotor();
            this.ankle = ankle !== undefined ? ankle : new jderobot.BodyMotor();
        },
        false,
        function(__os)
        {
            jderobot.BodyMotor.write(__os, this.hip);
            jderobot.BodyMotor.write(__os, this.knee);
            jderobot.BodyMotor.write(__os, this.ankle);
        },
        function(__is)
        {
            this.hip = jderobot.BodyMotor.read(__is, this.hip);
            this.knee = jderobot.BodyMotor.read(__is, this.knee);
            this.ankle = jderobot.BodyMotor.read(__is, this.ankle);
        },
        36, 
        true);

    /**
     * BodyPosition
     **/
    jderobot.BodyPosition = Slice.defineStruct(
        function(lArm, rArm, rLeg, lLeg, head, time)
        {
            this.lArm = lArm !== undefined ? lArm : new jderobot.ArmPosition();
            this.rArm = rArm !== undefined ? rArm : new jderobot.ArmPosition();
            this.rLeg = rLeg !== undefined ? rLeg : new jderobot.LegPosition();
            this.lLeg = lLeg !== undefined ? lLeg : new jderobot.LegPosition();
            this.head = head !== undefined ? head : new jderobot.BodyMotor();
            this.time = time !== undefined ? time : 0.0;
        },
        false,
        function(__os)
        {
            jderobot.ArmPosition.write(__os, this.lArm);
            jderobot.ArmPosition.write(__os, this.rArm);
            jderobot.LegPosition.write(__os, this.rLeg);
            jderobot.LegPosition.write(__os, this.lLeg);
            jderobot.BodyMotor.write(__os, this.head);
            __os.writeFloat(this.time);
        },
        function(__is)
        {
            this.lArm = jderobot.ArmPosition.read(__is, this.lArm);
            this.rArm = jderobot.ArmPosition.read(__is, this.rArm);
            this.rLeg = jderobot.LegPosition.read(__is, this.rLeg);
            this.lLeg = jderobot.LegPosition.read(__is, this.lLeg);
            this.head = jderobot.BodyMotor.read(__is, this.head);
            this.time = __is.readFloat();
        },
        136, 
        true);
    Slice.defineSequence(jderobot, "BodyMovHelper", "jderobot.BodyPosition", true);

    jderobot.BodyMovementsData = Slice.defineObject(
        function(mov)
        {
            Ice.Object.call(this);
            this.mov = mov !== undefined ? mov : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::BodyMovementsData"
        ],
        -1,
        function(__os)
        {
            jderobot.BodyMovHelper.write(__os, this.mov);
        },
        function(__is)
        {
            this.mov = jderobot.BodyMovHelper.read(__is);
        },
        false);

    jderobot.BodyMovementsDataPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.BodyMovementsData.ice_staticId, undefined);

    Slice.defineOperations(jderobot.BodyMovementsData, jderobot.BodyMovementsDataPrx);

    jderobot.BodyMovements = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::BodyMovements"
        ],
        -1, undefined, undefined, false);

    jderobot.BodyMovementsPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.BodyMovements.ice_staticId, undefined);

    Slice.defineOperations(jderobot.BodyMovements, jderobot.BodyMovementsPrx,
    {
        "doMovement": [, , , , , [3], [["jderobot.BodyMovementsData", true]], , , true, ],
        "getMovement": [, 2, 2, , , ["jderobot.BodyMovementsData", true], , , , , true]
    });
    exports.jderobot = jderobot;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
