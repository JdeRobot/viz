// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `wiimote.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var jderobot = require("jderobot/common").jderobot;
    var Slice = Ice.Slice;

    jderobot.AccelerometerData = Slice.defineObject(
        function(accelerometer)
        {
            Ice.Object.call(this);
            this.accelerometer = accelerometer !== undefined ? accelerometer : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::AccelerometerData"
        ],
        -1,
        function(__os)
        {
            jderobot.IntSeqHelper.write(__os, this.accelerometer);
        },
        function(__is)
        {
            this.accelerometer = jderobot.IntSeqHelper.read(__is);
        },
        false);

    jderobot.AccelerometerDataPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.AccelerometerData.ice_staticId, undefined);

    Slice.defineOperations(jderobot.AccelerometerData, jderobot.AccelerometerDataPrx);

    jderobot.InfraredData = Slice.defineObject(
        function(infrared1, infrared2, infrared3, infrared4, sourceDetected)
        {
            Ice.Object.call(this);
            this.infrared1 = infrared1 !== undefined ? infrared1 : null;
            this.infrared2 = infrared2 !== undefined ? infrared2 : null;
            this.infrared3 = infrared3 !== undefined ? infrared3 : null;
            this.infrared4 = infrared4 !== undefined ? infrared4 : null;
            this.sourceDetected = sourceDetected !== undefined ? sourceDetected : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::InfraredData"
        ],
        -1,
        function(__os)
        {
            jderobot.IntSeqHelper.write(__os, this.infrared1);
            jderobot.IntSeqHelper.write(__os, this.infrared2);
            jderobot.IntSeqHelper.write(__os, this.infrared3);
            jderobot.IntSeqHelper.write(__os, this.infrared4);
            __os.writeInt(this.sourceDetected);
        },
        function(__is)
        {
            this.infrared1 = jderobot.IntSeqHelper.read(__is);
            this.infrared2 = jderobot.IntSeqHelper.read(__is);
            this.infrared3 = jderobot.IntSeqHelper.read(__is);
            this.infrared4 = jderobot.IntSeqHelper.read(__is);
            this.sourceDetected = __is.readInt();
        },
        false);

    jderobot.InfraredDataPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.InfraredData.ice_staticId, undefined);

    Slice.defineOperations(jderobot.InfraredData, jderobot.InfraredDataPrx);

    jderobot.NunchukData = Slice.defineObject(
        function(button, stick, acc)
        {
            Ice.Object.call(this);
            this.button = button !== undefined ? button : 0;
            this.stick = stick !== undefined ? stick : null;
            this.acc = acc !== undefined ? acc : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::NunchukData"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.button);
            jderobot.IntSeqHelper.write(__os, this.stick);
            jderobot.IntSeqHelper.write(__os, this.acc);
        },
        function(__is)
        {
            this.button = __is.readInt();
            this.stick = jderobot.IntSeqHelper.read(__is);
            this.acc = jderobot.IntSeqHelper.read(__is);
        },
        false);

    jderobot.NunchukDataPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.NunchukData.ice_staticId, undefined);

    Slice.defineOperations(jderobot.NunchukData, jderobot.NunchukDataPrx);

    jderobot.wiiMote = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::wiiMote"
        ],
        -1, undefined, undefined, false);

    jderobot.wiiMotePrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.wiiMote.ice_staticId, undefined);

    Slice.defineOperations(jderobot.wiiMote, jderobot.wiiMotePrx,
    {
        "setValue": [, , , , , [3], [[3]], , , , ],
        "changeRumbleMode": [, , , , , [3], , , , , ],
        "changeIrMode": [, , , , , [3], , , , , ],
        "changeAccMode": [, , , , , [3], , , , , ],
        "changeButtonMode": [, , , , , [3], , , , , ],
        "changeNunchukMode": [, , , , , [3], , , , , ],
        "activateLed": [, , , , , [3], [[3]], , , , ],
        "getButtonData": [, , , , , [3], , , , , ],
        "getNunchukData": [, 2, 2, , , ["jderobot.NunchukData", true], , , , , true],
        "getAccData": [, 2, 2, , , ["jderobot.AccelerometerData", true], , , , , true],
        "getIrData": [, 2, 2, , , ["jderobot.InfraredData", true], , , , , true],
        "getBatteryStatus": [, , , , , [3], , , , , ]
    });
    exports.jderobot = jderobot;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
